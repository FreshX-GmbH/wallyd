cache: 
  key: ${CI_BUILD_REF_NAME}
  paths:
    - node_modules/

stages:
  - build
  - test
  - post-test
  - deploy #TODO

variables:
  USE_SSH: "true"
  USE_NPM: "true"

before_script:
  # Run ssh-agent (inside the build environment)
  - '[ "$USE_SSH" != "true" ] || eval $(ssh-agent -s)'

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  - '[ "$USE_SSH" != "true" ] || ssh-add /.ssh/id_rsa'

  # For Docker builds disable host key checking. Be aware that by adding that
  # you are suspectible to man-in-the-middle attacks.
  # WARNING: Use this only with the Docker executor, if you use it with shell
  # you will overwrite your user's SSH config.
  - mkdir -p ~/.ssh
  - mkdir -p /data
  - '[ "$USE_SSH" == "true" ] && [[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

  - '[ "$USE_NPM" != "true" ] || npm set registry https://npm.freshx.de'
  - '[ "$USE_NPM" != "true" ] || npm config set strict-ssl false'

install:
  stage: build
  script:
    - '[[ -f package.json ]] && npm install'
    - '[[ -f package.json ]] || echo "No package.json found. Skip npm install."'
  tags:
    - node4

nodeunit:
  services: 
    - "dreg.freshx.de/redis:latest"
  stage: test
  script:
    - '[[ -f package.json ]] && npm install'
    - '[[ -f package.json ]] && npm install -g nodeunit json'
    - '[[ -f package.json ]] && mkdir -p test'
    - '[[ -f package.json ]] && if [[ ! -f settings.json ]]; then echo {} > settings.json; fi'
    - '[[ -f package.json ]] && json -I -f settings.json -e "this.redis = {}; this.redis.host = \"redis\"; this.redis.port = 6379; this.core = this.core || {}; this.core.redis = {}; this.core.redis = this.redis;";'
    - 'if [[ -f package.json ]]; then nodeunit; fi' # do not fail if package.json does not exist
  tags:
    - node4

lint:
  stage: test
  script:
    - git log -m -1 --name-only --pretty="format:" $CI_BUILD_REF > /data/files
    - git show -s --format=%B $CI_BUILD_REF > /data/commit
    - cd /data
    - git clone git@git.freshx.de:Wallaby-CI/wallaby-ci-lint.git
    - cd wallaby-ci-lint
    - npm install
    - node node_modules/gulp/bin/gulp.js lint
  tags:
    - node6
    - java

  artifacts:
    when: on_failure
    expire_in: 30 days
    paths:
      - artifacts/

notify:rocket.chat:
  stage: post-test
  variables:
    USE_SSH: "false"
    USE_NPM: "false"
  script: >-
    curl -X POST --data-urlencode "payload={\"username\":\"gitlab\",\"text\":\"Build on \`$CI_BUILD_REF_NAME\` failed! Commit \`$(git log -1 --oneline)\` See <$CI_PROJECT_URL/commit/$CI_BUILD_REF/pipelines>\"}" $CI_ROCKETCHAT_WEBHOOK_URL
  when: on_failure
  tags:
    - chat
